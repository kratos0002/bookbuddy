name: BookBuddy Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install chromium
    
    - name: Check API health
      id: api-check
      run: |
        BOOKS_RESPONSE=$(curl -s https://bookbuddy-qpi.onrender.com/api/books)
        CHARACTERS_RESPONSE=$(curl -s https://bookbuddy-qpi.onrender.com/api/characters)
        
        # Check if books endpoint returns JSON
        if echo "$BOOKS_RESPONSE" | jq -e . >/dev/null 2>&1; then
          echo "Books endpoint returns valid JSON"
          echo "BOOKS_VALID=true" >> $GITHUB_ENV
        else
          echo "Books endpoint does not return valid JSON"
          echo "BOOKS_VALID=false" >> $GITHUB_ENV
        fi
        
        # Check if characters endpoint returns JSON or HTML
        if echo "$CHARACTERS_RESPONSE" | grep -q "<!DOCTYPE html>"; then
          echo "Characters endpoint returns HTML instead of JSON"
          echo "CHARACTERS_VALID=false" >> $GITHUB_ENV
          echo "API_PARTIAL=true" >> $GITHUB_ENV
        elif echo "$CHARACTERS_RESPONSE" | jq -e . >/dev/null 2>&1; then
          echo "Characters endpoint returns valid JSON"
          echo "CHARACTERS_VALID=true" >> $GITHUB_ENV
          echo "API_PARTIAL=false" >> $GITHUB_ENV
        else
          echo "Characters endpoint returns invalid response"
          echo "CHARACTERS_VALID=false" >> $GITHUB_ENV
          echo "API_PARTIAL=true" >> $GITHUB_ENV
        fi
    
    - name: Run API tests
      continue-on-error: ${{ env.API_PARTIAL == 'true' }}
      run: npm run test:api
      env:
        API_URL: https://bookbuddy-qpi.onrender.com
        FRONTEND_URL: https://bookbuddy.netlify.app
        NODE_ENV: test
    
    - name: Run E2E tests
      continue-on-error: ${{ env.API_PARTIAL == 'true' }}
      run: npm run test:e2e
      env:
        API_URL: https://bookbuddy-qpi.onrender.com
        FRONTEND_URL: https://bookbuddy.netlify.app
        HEADLESS: true
        NODE_ENV: test
        
    - name: Run Chat tests
      continue-on-error: ${{ env.API_PARTIAL == 'true' }}
      run: npm run test:chat
      env:
        API_URL: https://bookbuddy-qpi.onrender.com
        FRONTEND_URL: https://bookbuddy.netlify.app
        HEADLESS: true
        NODE_ENV: test
    
    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          test-results/
          playwright-report/
          *.png
        retention-days: 7 